@{
    ViewBag.Title = "Chat";

}



<div>
    <input type="hidden" id="displayname" />

</div>
<!--Chat messages-->
<div class="row">
    <div class="col s12  l10 offset-l1 z-depth-1" style="margin-top:10px">
        <div><h4 class="center">Messages</h4></div>
        <ul id="discussion" style="height: 300px; overflow: auto"></ul>
    </div>
</div>

<!--Input field-->

<div class="row">
    <form class="col s12 l10 offset-l1 z-depth-1 hoverable" id="ChatForm" action="Chat" method="post"  >
        <div class="row valign-wrapper">

            <div class="col s2 valign center-align">
                <i class="fa fa-pencil fa-3x teal-text img-responsive"></i>
            </div>


            <div class="input-field col s8 valign  left">
                <input placeholder="Type your message" id="message" type="text" class="validate">
                <label for="first_name">Message</label>
            </div>

            <div class="col s2 valign left ">
                <a  class="btn-floating btn-large waves-effect waves-light red" id="sendmessage"><i class="fa  fa-send " ></i></a>
            </div>
        </div>
    </form>
</div>


@section scripts {

    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    @*<script>
                function search(input) {
            $('<p>').text('searching for '+input.value).appendTo('body');
        }

        $("#searchForm").submit(function() {
            search($("#searchText").get(0));
            return false;
        });
            </script>*@
    <!--SignalR script to update the chat page and send messages.-->
    @*<input class="tableInput" type="text" value="Table input" onkeypress="return tableInputKeyPress(event)" />*@

    @*<script type="text/javascript">
            function tableInputKeyPress(e) {
                e = e || window.event;
                var key = e.keyCode;
                if (key == 13) //Enter
                {
                    //do you task here...
                    return true; //return true to submit, false to do nothing
                }
            }
        </script>*@
    <script>
    function search(input) {
   // $('<p>').text('searching for '+input.value).appendTo('body');
}

$("#ChatForm").submit(function() {
    search($("#message").get(0));
    return false;
});
        </script>
    @*<script>
        function submitOnEnter(e, page) {
        var key;

        if (window.event)
        key = window.event.keyCode; //IE
        else
        key = e.which; //Firefox & others

        if(key == 13)
        window.location = page;
            }
            </script>*@
    @*<script>
        $(document).on('submit', '#col s2 valign left ', function(event){

        event.preventDefault();

        // everything else you want to do on submit
        });
            </script>*@
    @*<script type="text/javascript">
            $(document).ready(function () {
                $("#Formbeg").keypress(function (e) {
                    keycode = e.keyCode || e.charCode || e.which //for cross browser
                    if (keycode == 13)    //keyCode for enter key
                    {
                        var defaultbutton = $(this).attr("DefaultButton");
                        $("#" + defaultbutton).click();
                        return false;
                    }
                });
            });
        </script>*@
    f@*unction EnterKeyFilter()
        {  if (window.event.keyCode == 13)
             {event.returnValue = false;
            event.cancel = true;
          }*@

    <script>
    $(function () {

    // Reference the auto-generated proxy for the hub.
    var chat = $.connection.chatHub;

    // Create a function that the hub can call back to display messages.
    chat.client.addNewMessageToPage = function (name, message) {

    // Add the message to the page.
    $('#discussion').append('<li><strong>' + htmlEncode(name)+ '</strong>: ' + htmlEncode(message) + '</li>');
    };


    // Get the user name and store it to prepend to messages.


    var _myNames = JSON.parse('@Html.Raw(Json.Encode(ViewData["Message"]))');
    $('#displayname').val(_myNames);
    // Set initial focus to message input box.
    $('#message').focus();


    // Start the connection.
    $.connection.hub.start().done(function () {
    $('#sendmessage').click(function () {

    // Call the Send method on the hub.
    chat.server.send($('#displayname').val(), $('#message').val());

    // Clear text box and reset focus for next comment.
    $('#message').val('').focus();
    });
    });
    });


    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {

    var encodedValue = $('<div />').text(value).html();
    return encodedValue;
    }
    </script>
}
